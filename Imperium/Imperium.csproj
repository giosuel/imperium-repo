<Project Sdk="Microsoft.NET.Sdk">
    <PropertyGroup>
        <Title>Imperium REPO</Title>
        <Authors>giosuel</Authors>
        <Product>Imperium Repo</Product>
        <PackageId>ImperiumRepo</PackageId>
        <AssemblyName>giosuel.Imperium</AssemblyName>
        <Description>A powerful all-in-one debugging and admin tool to test and explore game mechanics and functionality in R.E.P.O.</Description>
        <RootNamespace>Imperium</RootNamespace>

        <TargetFramework>netstandard2.1</TargetFramework>
        <LangVersion>latest</LangVersion>
        <AllowUnsafeBlocks>true</AllowUnsafeBlocks>

        <PackageProjectUrl>https://github.com/giosuel/imperium-repo</PackageProjectUrl>
        <PackageIcon>assets/icon_256x256.png</PackageIcon>
        <PackageLicenseExpression>GPL-3.0-or-later</PackageLicenseExpression>
        <PackageReadmeFile>README.md</PackageReadmeFile>
        <PackageTags>repo;bepinex;harmony;debug;mod;unity</PackageTags>

        <RepositoryUrl>https://github.com/giosuel/imperium-repo</RepositoryUrl>
        <RepositoryType>git</RepositoryType>
    </PropertyGroup>

    <ItemGroup>
        <PackageReference Include="BepInEx.Analyzers" Version="1.*" PrivateAssets="all" />
        <PackageReference Include="BepInEx.AutoPlugin" Version="1.1.0">
            <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
            <PrivateAssets>all</PrivateAssets>
        </PackageReference>
        <PackageReference Include="BepInEx.Core" Version="5.*" />
        <PackageReference Include="BepInEx.AssemblyPublicizer.MSBuild" Version="0.4.1" PrivateAssets="all" ExcludeAssets="runtime" />
        <PackageReference Include="UnityEngine.Modules" Version="2022.3.21" IncludeAssets="compile" />

        <PackageReference Include="Rune580.Mods.Repo.RepoSteamNetworking" Version="0.1.2-dev.1" />
        <PackageReference Include="Zehs.REPOLib" Version="2.1.0" />
        <PackageReference Include="rainbowblood.UniverseLib.Mono" Version="2.*" />
        <PackageReference Include="R.E.P.O.GameLibs.Steam" Version="*-*" PrivateAssets="all" Publicize="true" />

        <PackageReference Include="MinVer" Version="4.3.0">
            <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
            <PrivateAssets>all</PrivateAssets>
        </PackageReference>

        <ProjectReference Include="..\librarium\Librarium\Librarium.csproj" />

        <Reference Include="UnityExplorer.BIE5.Mono" HintPath="..\deps\UnityExplorer.BIE5.Mono.dll" />
    </ItemGroup>

    <!-- Enable debug symbols. This will show source code line numbers in stack traces. -->
    <PropertyGroup>
        <DebugSymbols>true</DebugSymbols>
        <DebugType>embedded</DebugType>
        <!-- Substitute full path to this directory with ./, hiding it from debug symbols. -->
        <PathMap>$([System.IO.Path]::GetFullPath('$(MSBuildThisFileDirectory)'))=./</PathMap>
    </PropertyGroup>

    <!-- MinVer -->
    <PropertyGroup>
        <MinVerDefaultPreReleaseIdentifiers>dev</MinVerDefaultPreReleaseIdentifiers>
        <MinVerTagPrefix>v</MinVerTagPrefix>
    </PropertyGroup>

    <ItemGroup>
        <None Include="../README.md" Pack="true" PackagePath="/" />
        <None Include="../assets/icon_256x256.png" Pack="true" PackagePath="assets/" />
        <None Remove="resources\assets\imperium_assets" />
        <EmbeddedResource Include="resources\assets\imperium_assets" />
    </ItemGroup>

    <!--  Set the plugin version with MinVer  -->
    <Target Name="SetPluginVersion" DependsOnTargets="MinVer">
        <PropertyGroup>
            <PlainVersion>$(MinVerMajor).$(MinVerMinor).$(MinVerPatch)</PlainVersion>
        </PropertyGroup>
    </Target>

    <Target 
            Name="AddGeneratedFile" 
            BeforeTargets="BeforeBuild;CoreCompile" 
            DependsOnTargets="SetPluginVersion" 
            Inputs="$(MSBuildAllProjects)" 
            Outputs="$(IntermediateOutputPath)GeneratedFile.cs">
        <PropertyGroup>
            <BepInExPluginGuid Condition="'$(BepInExPluginGuid)' == ''">$(AssemblyName)</BepInExPluginGuid>
            <BepInExPluginName Condition="'$(BepInExPluginName)' == ''">$(Product)</BepInExPluginName>
            <BepInExPluginVersion Condition="'$(BepInExPluginVersion)' == ''">$(PlainVersion)</BepInExPluginVersion>
            <GeneratedText><![CDATA[
namespace $(RootNamespace)
{
    internal static class LCMPluginInfo
    {
        public const string PLUGIN_GUID = "$(BepInExPluginGuid)"%3B
        public const string PLUGIN_NAME = "$(BepInExPluginName)"%3B
        public const string PLUGIN_VERSION = "$(BepInExPluginVersion)"%3B
    }
}
      ]]></GeneratedText>
            <GeneratedFilePath>$(IntermediateOutputPath)LCMPluginInfo.cs</GeneratedFilePath>
        </PropertyGroup>
        <ItemGroup>
            <Compile Include="$(GeneratedFilePath)" />
            <FileWrites Include="$(GeneratedFilePath)" />
        </ItemGroup>
        <WriteLinesToFile Lines="$(GeneratedText)" File="$(GeneratedFilePath)" WriteOnlyWhenDifferent="true" Overwrite="true" />
    </Target>

    <!-- Call with `dotnet build -target:PackThunderstore` -->
    <Target Name="PackThunderstore" DependsOnTargets="PostBuildEvent;SetPluginVersion">
        <Exec Command="dotnet tool restore" />
        <Exec Command="dotnet tcli build --config-path &quot;$(ProjectDir)thunderstore.toml&quot; --package-version $(PlainVersion)" />
        <ItemGroup>
            <FilesToRename Include="$(ProjectDir)dist/*-$(PlainVersion).zip" />
        </ItemGroup>
        <Move SourceFiles="@(FilesToRename)" DestinationFiles="@(FilesToRename -&gt; Replace($(PlainVersion), $(MinVerVersion)))" />
    </Target>

    <!-- This is manually called by the github actions publish workflow -->
    <Target Name="PublishThunderstore" DependsOnTargets="PackThunderstore">
        <Exec Command="dotnet tcli publish --config-path &quot;$(ProjectDir)thunderstore.toml&quot; --package-version $(PlainVersion)" />
    </Target>
</Project>
